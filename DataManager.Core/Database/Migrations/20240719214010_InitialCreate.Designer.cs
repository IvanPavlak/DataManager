// <auto-generated />
using System;
using DataManager.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataManager.Core.Database.Migrations
{
    [DbContext(typeof(DataManagerDbContext))]
    [Migration("20240719214010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataManager.Core.DBModels.DataModelOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ExitId")
                        .HasColumnType("integer");

                    b.Property<int>("GainAmountOne")
                        .HasColumnType("integer");

                    b.Property<int>("GainAmountTwo")
                        .HasColumnType("integer");

                    b.Property<int>("Loss")
                        .HasColumnType("integer");

                    b.Property<int>("MemberId")
                        .HasColumnType("integer");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Total")
                        .HasColumnType("integer");

                    b.Property<string>("UserGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExitId");

                    b.ToTable("DataModelOnes");
                });

            modelBuilder.Entity("DataManager.Core.DBModels.DataModelTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExitId")
                        .HasColumnType("integer");

                    b.Property<int>("GainAmountThree")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PeriodEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("PeriodStartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ExitId");

                    b.ToTable("DataModelTwos");
                });

            modelBuilder.Entity("DataManager.Core.DBModels.Exit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exits");
                });

            modelBuilder.Entity("DataManager.Core.DBModels.DataModelOne", b =>
                {
                    b.HasOne("DataManager.Core.DBModels.Exit", "Exit")
                        .WithMany("DataModelOnes")
                        .HasForeignKey("ExitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exit");
                });

            modelBuilder.Entity("DataManager.Core.DBModels.DataModelTwo", b =>
                {
                    b.HasOne("DataManager.Core.DBModels.Exit", "Exit")
                        .WithMany("DataModelTwos")
                        .HasForeignKey("ExitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exit");
                });

            modelBuilder.Entity("DataManager.Core.DBModels.Exit", b =>
                {
                    b.Navigation("DataModelOnes");

                    b.Navigation("DataModelTwos");
                });
#pragma warning restore 612, 618
        }
    }
}
